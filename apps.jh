application {
  config {
    baseName gateway,
    packageName com.tanjie.gateway,
    applicationType gateway,
    authenticationType jwt,
    devDatabaseType h2Disk,
    prodDatabaseType mysql,
    enableHibernateCache true,
    enableTranslation false,
    serviceDiscoveryType eureka,
    serverPort 8080
  }
  entities Blog, Post, Tag, Product
}

application {
  config {
    baseName blog,
    packageName com.tanjie.blog,
    applicationType microservice,
    authenticationType jwt,
    devDatabaseType h2Disk,
    prodDatabaseType mysql,
    serverPort 8081,
    serviceDiscoveryType eureka
  }
  entities Blog, Post, Tag
}

application {
  config {
    baseName store,
    packageName com.tanjie.store,
    applicationType microservice,
    authenticationType jwt,
    devDatabaseType h2Disk,
    prodDatabaseType mysql,
    serverPort 8082,
    serviceDiscoveryType eureka
  }
  entities Product
}

entity Blog {
  name String required minlength(3),
  handle String required minlength(2)
}

entity Post {
  title String required,
  content TextBlob required,
  date Instant required
}

entity Tag {
  name String required minlength(2)
}

entity Product {
  title String required,
  price BigDecimal required min(0),
  image ImageBlob
}

relationship ManyToOne {
  // Blog{user(login)} to User,
  Post{blog(name)} to Blog
}

relationship ManyToMany {
  Post{tag(name)} to Tag{post}
}

paginate Post, Tag with infinite-scroll
paginate Product with pagination

microservice Product with store
microservice Blog, Post, Tag with blog



// will be created under 'docker-compose' folder
deployment {
  deploymentType docker-compose
  appsFolders [gateway, blog, store]
  dockerRepositoryName "tanjie123"
}

// will be created under 'kubernetes' folder
deployment {
  deploymentType kubernetes
  appsFolders [gateway, blog, store]
  dockerRepositoryName "tanjie123"
  kubernetesServiceType Ingress
  ingressDomain "myjhiipster.com"
}